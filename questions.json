{
    "html" : [
    {
        "id": 1,
        "text": "Какой тег используется для создания ссылки?",
        "hasOptions": true,
        "options": [
            {"id": 1, "txt": "<link>", "isCorrect": false},
            {"id": 2, "txt": "<ancor>", "isCorrect": false},
            {"id": 3, "txt": "<href>", "isCorrect": false},
            {"id": 4, "txt": "<a>", "isCorrect": true}
        ]
    },
    {
        "id": 2,
        "text": "Что такое HTML?",
        "hasOptions": false,
        "answer": "HTML расшифровывается как HyperText Markup Language (язык гипертекстовой разметки). Это язык разметки документов во Всемирной паутине (World Wide Web, WWW). HTML — это стандартизированный язык, позволяющий составлять форматированный текст. Браузер интерпретирует его и отображает на экране элементы веб-страниц."
    },
    {
        "id": 3,
        "text": "Что такое HTML-тег?",
        "hasOptions": false,
        "answer": "Тег — это специальное служебное слово, заключенное в угловые скобки. Его ещё называют «элемент HTML». Тегов в языке HTML много и каждый что-то делает с контентом, который обычно находится внутри скобок или между тегами.Если тег парный, то тегу <ТЕГ> соответствует </ТЕГ>."
    },
    {
        "id": 4,
        "text": "Зачем использовать списки в HTML?",
        "hasOptions": false,
        "answer": "Списки делают информацию более наглядной и удобной для восприятия. Более того, внутри списков (точнее, для произвольного отображения элементов списка) тоже можно использовать различные теги."
    },
    {
        "id": 5,
        "text": "Почему некоторые символы на веб-странице иногда отображаются некорректно?",
        "hasOptions": false,
        "answer": "Чаще всего символы отображаются некорректно из-за проблем с кодировкой. То есть причина — в настройках браузера или веб-сервера."
    },
    {
        "id": 6,
        "text": "Что такое white-space?",
        "hasOptions": false,
        "answer": "White-space — это свойство, позволяющее менять количество пробелов между словами при отображении веб-страницы. По умолчанию любое количество пробелов в HTML-коде браузер интерпретирует как один пробел."
    },
    {
        "id": 7,
        "text": "Есть ли разница между маркированным списком и списком директорий и меню?",
        "hasOptions": false,
        "answer": "Да, разница заключается в том, что неупорядоченный список имеет атрибуты для изменения стиля маркера."
    }

],
    "scss": [
        {
            "id": 11,
            "text": "Какая разница между элементами <span> и <div>?",
            "hasOptions": false,
            "answer": "<span> — это строчный (inline) элемент.\n\n<div> — это блочный (block) элемент.\n\nЭлементы <div> нужно использовать для оформления разделов документа. А элементы <span> — в роли контейнеров для небольших объёмов текста, для изображений и других подобных элементов страниц."
        },
        {
            "id": 12,
            "text": "Что такое мета-теги?",
            "hasOptions": false,
            "answer": "Мета-теги — это теги, находящиеся в теге страницы <head> и описывающие содержимое страницы. Мета-теги не выводятся на странице. Они имеются лишь в её коде.Их основная задача заключается в том, чтобы кратко описывать содержимое страниц поисковым системам."
        },
        {
            "id": 13,
            "text": "Какая разница между селекторами идентификаторов и классов в CSS?",
            "hasOptions": false,
            "answer": "Идентификаторы (id) уникальны. У элемента может быть только один идентификатор. На странице может присутствовать лишь один элемент с конкретным идентификатором.\n\nИмена классов (class) не являются уникальными. Один и тот же класс можно назначать множеству элементов. Элементу может быть назначено несколько классов.\n\nЕсли некий стиль нужно применить к нескольким элементам страницы — эту задачу нужно решать с использованием классов."
        },
        {
            "id": 14,
            "text": "Как пользоваться медиазапросами в CSS?",
            "hasOptions": false,
            "answer": "В медиазапросах используется правило @media, с помощью которого можно применять CSS-стили к различным типам содержимого. Медиазапросы могут использоваться и для настройки элементов страниц с учётом характеристик среды, в которой просматривают страницы."
        },
        {
            "id": 15,
            "text": "Что такое псевдоклассы в CSS?",
            "hasOptions": false,
            "answer": "В CSS псевдоклассы используются для описания стилей элементов, находящихся в особых состояниях. Псевдоклассы можно использовать совместно с CSS-селекторами для настройки внешнего вида элементов на основе их состояний."
        },
        {
            "id": 16,
            "text": "Какая разница между следующими видами позиционирования элементов: относительное, фиксированное, абсолютное, статическое?",
            "hasOptions": false,
            "answer": "Относительное позиционирование — это когда элемент смещается относительно его положения, задаваемого по умолчанию.\n\nФиксированное позиционирование — это когда настраивают положение элемента, ориентируясь на края окна браузера.\n\nАбсолютное позиционирование — это размещение элемента относительно ближайшего позиционированного родительского элемента, причём, именно там, где указано разработчиком.\n\nСтатическое позиционирование — это режим позиционирования, применяемый по умолчанию, при использовании которого элементы выводятся в том порядке, в котором они описаны в документе."
        }
            

    ],
    "js": [
        {
            "id": 21,
            "text": "Чем отличаются PUT- и POST-запросы?",
            "hasOptions": false,
            "answer": "PUT-запросы приводят к замене целевого ресурса на данные, передаваемые в запросе. Его можно использовать для обновления содержимого существующего ресурса или для создания нового ресурса.\n\nPOST-запросы приводят к специфической для ресурса обработке данных, передаваемых в запросе. Их можно использовать для выполнения различных действий. В том числе — для создания новых ресурсов, для выгрузки файлов на сервер, для отправки форм."
        },
        {
            "id": 22,
            "text": "В чём отличия технологии Long Polling, протокола WebSocket и событий, генерируемых сервером?",
            "hasOptions": false,
            "answer": "Технология Long Polling применяется при взаимодействии клиентских и серверных систем. Клиент отправляет серверу запрос, ответ на который поступает тогда, когда в распоряжении сервера оказываются данные, запрошенные клиентом. После этого клиент выполняет новый запрос.\n\nПротокол WebSocket позволяет устанавливать долгоживущие двусторонние соединения между клиентом и сервером.\n\nВ основе событий, генерируемых сервером, лежит использование долгоживущего HTTP-соединения, которое используется для отправки клиенту новых данных по инициативе сервера."
        },
        {
            "id": 23,
            "text": "Чем отличаются куки-файлы, сессионное хранилище и локальное хранилище?",
            "hasOptions": false,
            "answer": "Локальное хранилище, как можно понять из его названия, это место, которое браузеры могут использовать для локального хранения данных. В нём может храниться до 10 Мб данных. Сессионное хранилище — это разновидность локального хранилища, которое привязано к сессии и удаляется после её завершения. В сессионном хранилище может храниться до 5 Мб данных.Куки-файлы используются для хранения небольших объёмов данных, не превышающих 4 Кб. Ими может пользоваться браузер, их может запрашивать у браузера сервер."
        },
        {
            "id": 24,
            "text": "Что такое CORS?",
            "hasOptions": false,
            "answer": "CORS (Cross-Origin Resource Sharing, совместное использование ресурсов между разными источниками) — это браузерный механизм, который позволяет предоставлять страницам доступ к ресурсам, расположенным за пределами некоего домена. Это расширяет возможности страниц и добавляет гибкости политике одинакового источника (same-origin policy)."
        },
        {
            "id": 25,
            "text": "Что такое промис?",
            "hasOptions": false,
            "answer": "Промисы — это объекты, которые используются в JavaScript при выполнении асинхронных операций. Они упрощают работу с асинхронными операциями и дают более удобные механизмы обработки ошибок, чем коллбэки и события."
        },
        {
            "id": 26,
            "text": "В каких состояниях может пребывать промис?",
            "hasOptions": false,
            "answer": "Промис может пребывать в одном из трёх состояний:\nИсполнено (fulfilled) — операция, связанная с промисом, завершена успешно.\n\nОтклонено (rejected) — операция, связанная с промисом, завершена с ошибкой.\n\nОжидание (pending) — промис находится в состоянии ожидания, то есть, о нём нельзя сказать, что он завершён успешно или с ошибкой."
        },
        {
            "id": 27,
            "text": "Что такое поднятие переменных и функций в JavaScript?",
            "hasOptions": false,
            "answer": "Поднятие переменных и функций (hoisting) — это перемещение их объявлений в верхнюю часть их области видимости (глобальной области видимости или области видимости функции)."
        },
        {
            "id": 28,
            "text": "Что такое поднятие переменных и функций в JavaScript?",
            "hasOptions": false,
            "answer": "В JavaScript ложными являются значения, которые, при преобразовании их к логическому типу, становятся значениями false. Это — следующие значения:\n\n'' \n0 \nnull\nundefined\nNaN\nfalse\n-0\n0n // значения типа BigInt, при преобразовании их к логическому типу, ведут себя так же, как значения типа Number"
        }
    ]
}